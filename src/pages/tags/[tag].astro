---
// library imports
import { getCollection, type CollectionEntry } from "astro:content";

// data imports
// import * as site from "../../data/site.json";

// layout imports
import Layout from "../../layouts/Layout.astro";

// component imports
import Hero from "../../components/SectionHeader.astro";
import PostCard from "../../components/PostCard.astro";

// utils imports
import { slugify, formatBlogPosts } from "../../js/utils";

// export formatted blog posts by tag
export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const formattedPosts: CollectionEntry<"blog">[] = formatBlogPosts(allPosts);
  const allTags = [
    ...new Set(
      formattedPosts
        .map((post) => post.data.tags) // Access the tags field
        .flat(), // Flatten tags from all posts into a single array
    ),
  ];
  return allTags.map((tag) => {
    const tagPosts = formattedPosts.filter(
      //@ts-ignore
      (post) => post.data.tags.includes(tag), // Match posts with the current tag
    );
    return {
      params: { tag: slugify(tag) },
      props: {
        tagName: tag,
        posts: tagPosts,
      },
    };
  });
}

interface Props {
  posts: CollectionEntry<"blog">[];
  tagName: string;
}

const { tag } = Astro.params;
const { posts, tagName } = Astro.props;
const headerTitle = "Tags";
const title = "Tagged '" + tagName + "'";
const description = "Articles tagged with '" + tagName + "'";
---

<Layout title={title} page={tagName}>
  <main>
    <header>
      <Hero
        headerTitle={headerTitle}
        title={title}
        description={description}
        category={headerTitle}
        categorySlug="tags"
      />
    </header>
    <div id="subgrid">
      {
        posts.map((post) => (
          <PostCard data={post.data} url={post.slug} tagType="h2" />
        ))
      }
    </div>
  </main>
</Layout>
<style>
  #subgrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
    gap: 1rem;
  }
</style>
