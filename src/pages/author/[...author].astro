---
// library imports
import { getCollection, type CollectionEntry } from "astro:content";

// layout imports
import Layout from "../../layouts/Layout.astro";

// component imports
import Hero from "../../components/SectionHeader-Author.astro";
import PostCard from "../../components/PostCard.astro";

// utils imports
import { slugify, formatBlogPosts } from "../../js/utils";

// export formatted blog posts by author
export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const formattedPosts: CollectionEntry<"blog">[] = formatBlogPosts(allPosts);
  const allAuthors = [
    ...new Set(formattedPosts.map((post) => post.data.author).flat()),
  ];
  return allAuthors.map((author) => {
    const authorPosts = formattedPosts.filter(
      (post) => post.data.author === author,
    );
    return {
      params: { author: slugify(author) },
      props: {
        authorName: author,
        posts: authorPosts,
      },
    };
  });
}

interface Props {
  posts: CollectionEntry<"blog">[];
  title: string;
  authorName: string;
}

// const { author } = Astro.params;
const { posts, authorName } = Astro.props;
const category = "Author";
const title = "Articles by " + authorName;
const authorSlug = slugify(authorName);
---

<Layout title={title} page={authorName}>
  <main>
    <Hero title={title} authorName={authorName} author={authorSlug} />
    <div id="subgrid">
      {
        posts.map((post) => (
          <PostCard data={post.data} url={post.slug} tagType="h2" />
        ))
      }
    </div>
  </main>
</Layout>
<style>
  #subgrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
    gap: 1rem;
  }
</style>
