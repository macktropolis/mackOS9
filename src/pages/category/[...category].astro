---
// library imports
import { getCollection, type CollectionEntry } from "astro:content";

// layout imports
import Layout from "../../layouts/Layout.astro";

// component imports
import Hero from "../../components/SectionHeader.astro";
import PostCard from "../../components/PostCard.astro";

// utils imports
import { slugify, formatBlogPosts } from "../../js/utils";

// Export formatted blog posts by category
export async function getStaticPaths() {
    const POSTS_PER_PAGE = 1; // Define POSTS_PER_PAGE here since this function is isolated.
    const allPosts = await getCollection("blog");
    const formattedPosts: CollectionEntry<"blog">[] = formatBlogPosts(allPosts);
    const allCategories = [
        ...new Set(formattedPosts.map((post) => post.data.category).flat()),
    ];

    const paths = [];
    for (const category of allCategories) {
        const categoryPosts = formattedPosts.filter(
            (post) => post.data.category === category,
        );
        const totalPages = Math.ceil(categoryPosts.length / POSTS_PER_PAGE);

        for (let page = 1; page <= totalPages; page++) {
            paths.push({
                params: { category: slugify(category), page: page.toString() },
                props: {
                    categoryName: category,
                    posts: categoryPosts.slice(
                        (page - 1) * POSTS_PER_PAGE,
                        page * POSTS_PER_PAGE,
                    ),
                    totalPages,
                    currentPage: page,
                },
            });
        }
    }

    return paths;
}

interface Props {
    posts: CollectionEntry<"blog">[];
    categoryName: string;
    currentPage: number;
    totalPages: number;
    title?: string;
    description?: string;
}

const { category } = Astro.params;
const { posts, categoryName, currentPage, totalPages } = Astro.props;
const headerTitle = "Files";
const categoryTitle = category ?? "More Article Categories";
const title = categoryName + " Articles";
const description = "";
const categorySlug = slugify(categoryName);
---

<Layout title={title} page={categoryName} categorySlug={categorySlug}>
    <main>
        <header>
            {
                (
                    <Hero
                        headerTitle={headerTitle}
                        title={title}
                        description={description}
                        category={categoryName}
                        categorySlug={categorySlug}
                    />
                )
            }

            <!-- Pagination -->
            {
                totalPages > 1 && (
                    <nav class="pagination">
                        {currentPage > 1 && (
                            <a
                                href={`/${categorySlug}/page/${currentPage - 1}`}
                                class="button">
                                Previous
                            </a>
                        )}
                        {Array.from({ length: totalPages }, (_, index) => (
                            <a
                                href={`/${categorySlug}/page/${index + 1}`}
                                class={
                                    currentPage === index + 1
                                        ? "active button"
                                        : "button"
                                }>
                                {index + 1}
                            </a>
                        ))}
                        {currentPage < totalPages && (
                            <a
                                href={`/${categorySlug}/page/${currentPage + 1}`}
                                class="button">
                                Next
                            </a>
                        )}
                    </nav>
                )
            }
            <!-- End Pagination -->
        </header>
        <div id="columns">
            {
                posts.map((post) => (
                    <PostCard data={post.data} url={post.slug} tagType="h2" />
                ))
            }
        </div>
    </main>
</Layout>

<style>
    .pagination {
        display: flex;
        gap: 0.5rem;
        margin: 1rem auto 0 auto;
        justify-content: center;
    }
</style>
