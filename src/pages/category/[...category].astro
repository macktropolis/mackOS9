---
// library imports
import { getCollection, type CollectionEntry } from "astro:content";

// data imports
// import * as site from "../../data/site.json";

// layout imports
import Layout from "../../layouts/Layout.astro";

// component imports
import Hero from "../../components/SectionHeader.astro";
import HeroMD from "../../components/SectionHeader-MackDaddy.astro";
import PostCard from "../../components/PostCard.astro";

// utils imports
import { slugify, formatBlogPosts } from "../../js/utils";

// export formatted blog posts by category
export async function getStaticPaths() {
    const allPosts = await getCollection("blog");
    const formattedPosts: CollectionEntry<"blog">[] = formatBlogPosts(allPosts);
    const allCategories = [
        ...new Set(formattedPosts.map((post) => post.data.category).flat()),
    ];
    return allCategories.map((category) => {
        const categoryPosts = formattedPosts.filter(
            (post) => post.data.category === category,
        );
        return {
            params: { category: slugify(category) },
            props: {
                categoryName: category,
                posts: categoryPosts,
            },
        };
    });
}

interface Props {
    posts: CollectionEntry<"blog">[];
    categoryName: string;
    title?: string;
    description?: string;
}

const { category } = Astro.params;
const { posts, categoryName } = Astro.props;
const headerTitle = "Files";
const categoryTitle = category ?? "More Article Categories";
const title = categoryName + " Articles";
const description = "";
const categorySlug = slugify(categoryName);
---

<Layout title={title} page={categoryName} categorySlug={categorySlug}>
    <main>
        <header>
            {
                // if the category is "MackDaddy Fun & Games", use the HeroMD component
                categoryName === "MackDaddy Fun & Games" && <HeroMD />
            }

            {
                // if the category is not "MackDaddy Fun & Games", use the Hero component
                categoryName != "MackDaddy Fun & Games" && (
                    <Hero
                        headerTitle={headerTitle}
                        title={title}
                        description={description}
                        category={categoryName}
                        categorySlug={categorySlug}
                    />
                )
            }
        </header>
        <div id="subgrid">
            {
                posts.map((post) => (
                    <PostCard data={post.data} url={post.slug} tagType="h2" />
                ))
            }
        </div>
    </main>
</Layout>
<style>
    #subgrid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 1rem;
    }
</style>
